Test1:
#First run below 2 models (should define 2 sub graphs)
rain = [e.Weather == "rain" for e in Events if e.hasField("Weather")]
subjects = [e.UserId for e in Events if e.hasField("Weather")]
rain[subjects] ~ Bernoulli(rate[subjects])
rate[subjects] ~ Beta(rateh, 0.1)
rateh ~ Uniform(0, 1)

clr = [e.Weather == "clear" for e in Events if e.hasField("Weather")]
clr[subjects] ~ Bernoulli(rate2[subjects])
rate2[subjects] ~ Beta(rateHier2, 0.3)
rateHier2 ~ Uniform(0, 1)

#Now change once sub graph
rate2[subjects] ~ Beta(rateHier2, 0.2)

#PRivate should only recompute one sub-graph

Test2:
# This job is bigger and creates large number of jobs
temperatures = [e.Temperature for e in Events if e.hasField("Temperature")]
subjects2 = [e.UserId for e in Events if e.hasField("Temperature")]
temperatures[subjects2]~Normal(mu[subjects2],sigma[subjects2])
mu[subjects2]~Normal(muMu, muSigma)
sigma[subjects2]~HalfNormal(sigmaSigma)
muMu ~ Normal(0,100)
sigmaSigma ~ HalfNormal(100)
muSigma ~ HalfNormal(100)


Test3:
# Testing private functions and pre-processing inbuilt functions
EventDict = dict([[e.id, e] for e in DemoEvents if e.hasField('id')])

def getDist(q):
    EventDict = dict([[e.id, e] for e in DemoEvents if e.hasField('id')])
    targetID = q['target']['id']
    targetEvent = EventDict[targetID]
    allEvents = [EventDict[e['id']] for e in q['events']]
    qidsEventDict = dict(zip(q['stimulus_label_array'], allEvents))
    targetQID = q['target_label']
    chosenQID = q['response']
    targetEvent = qidsEventDict[targetQID]
    AccelerometerData = [fft(e.AccelerometryDataFilesItr, 600) for e in allEvents if e.hasField("AccelerometryDataFilesItr")]
    AudioData = [mfcc(e.AudioProcessedDataFilesItr) for e in allEvents if e.hasField("AudioProcessedDataFilesItr")]
    GPSData = [e.GpsLocations for e in allEvents if e.hasField("GpsLocations")]
    targetAcc = fft(targetEvent.AccelerometryDataFilesItr, 600)
    targetAudio = mfcc(targetEvent.AudioProcessedDataFilesItr)
    targetGPS = targetEvent.GpsLocations
    accZip = zip(AccelerometerData, [targetAcc]*4)
    AudioZip = zip(AudioData, [targetAudio]*4)
    GPSZip = zip(GPSData, [targetGPS]*4)
    distAcc = [eucDistAll(e[0], e[1]) for e in accZip]
    distAudio = [eucDistAll(e[0], e[1]) for e in AudioZip]
    distGPS = [locDistAll(e[0], e[1]) for e in GPSZip]
    accPercentiles = [percentile(e, 50) for e in distAcc]
    audioPercentiles = [percentile(e, 50) for e in distAudio]
    GPSPercentiles = [percentile(e, 50) for e in distGPS]
    return [accPercentiles, audioPercentiles, GPSPercentiles]
dists = [getDist(e) for e in ExpEvents[0].data]

